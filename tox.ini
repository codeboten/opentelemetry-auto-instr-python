[tox]
skipsdist = True
skip_missing_interpreters = True
envlist =
; Environments are organized by individual package, allowing
; for specifying supported Python versions per package.

  ; py3{4,5,6,7,8}-test-flask
  ; pypy3-test-flask

  py3{4,5,6,7,8}-test-instrumentation-pymongo
  pypy3-test-instrumentation-pymongo
  lint
  docker-tests

[travis]
python =
  3.8: lint

[testenv]
deps =
  -c dev-requirements.txt
  test: pytest
; FIXME: add coverage testing
; FIXME: add mypy testing

changedir =
  ;flask: instrumentors/flask/tests
  pymongo: instrumentation/opentelemetry-instrumentation-pymongo/tests

commands_pre =
; Install without -e to test the actual installation
  python -m pip install -U pip setuptools wheel

  ;flask: pip install {toxinidir}/instrumentors/flask
  ;flask: pip install {toxinidir}/instrumentors/flask[test]

  pymongo: pip install {toxinidir}/instrumentation/opentelemetry-instrumentation-pymongo
  # pymongo: pip install {toxinidir}/instrumentation/opentelemetry-instrumentation-pymongo[test]

commands =
  test: pytest {posargs}

[testenv:lint]
basepython: python3.8
#recreate = True
deps =
  -c dev-requirements.txt
  pylint
  flake8
  isort
  black
  readme_renderer

commands_pre =
  python scripts/eachdist.py install --editable

commands =
  python scripts/eachdist.py lint --check-only

[testenv:docker-tests]
deps =
  pytest
  docker-compose >= 1.25.2
  mysql-connector-python ~=  8.0
  pymongo ~= 3.1
  psycopg2 ~= 2.8.4
  opentelemetry-api
  opentelemetry-sdk

changedir =
  instrumentation/opentelemetry-instrumentation-docker-tests/tests

commands_pre =
  pip install -e {toxinidir}/instrumentation/opentelemetry-instrumentation-pymongo
  docker-compose up -d
  python check_availability.py

commands =
  pytest {posargs}

commands_post =
  docker-compose down